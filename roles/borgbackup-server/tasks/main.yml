---

- name: install borgbackup
  apt:
    name: "{{ items }}"
    install_recommends: no
  vars:
    items:
      - borgbackup


- name: create backup user
  user:
    name: "{{ backup_user }}"
    comment: "borgbackup User"
    groups: "{{ backup_group }}"
    shell: /bin/bash
    home: "{{ backup_user_home }}"
    createhome: yes
    append: yes
    system: yes
  become: yes


- name: ensure backup_user_home exists and is only accessible by backup_user
  file:
    path: "{{ backup_user_home }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_group }}"
    mode: 0700
    state: directory


- name: ensure backup_pool exists and is only accessible by backup_user
  file:
    path: "{{ backup_pool }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_group }}"
    mode: 0700
    state: directory


- name: ensure backup_pool/<host> exist and are only accessible by backup_user
  file:
    path: "{{ backup_pool }}/{{ item.host }}"
    owner: "{{ backup_user }}"
    group: "{{ backup_group }}"
    mode: 0700
    state: directory
  with_items: "{{ backup_auth_users }}"


- name: add authorized keys for calling borgbackup
  blockinfile:
    path: "/etc/ssh/authorized_keys/{{ backup_user }}"
    block: |
            command="cd {{ backup_pool }}/{{ item.host }};borg serve --restrict-to-path {{ backup_pool }}/{{ item.host }}",restrict {{ item.key }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.host }}"
    create: yes
    validate: ssh-keygen -l -f %s
  with_items: "{{ backup_auth_users }}"
  become: yes
  notify: restart ssh


- name: ensure perms of authorized keys for calling borgbackup
  file:
    path: "/etc/ssh/authorized_keys/{{ backup_user }}"
    owner: root
    group: root
    mode: 0644
  become: yes
  notify: restart ssh
