---

- name: install git packages
  apt:
    name: "{{ items }}"
    state: present
    install_recommends: no
  vars:
    items:
      - git


- name: add git-shell to list of shells
  lineinfile:
    dest: /etc/shells
    line: '/usr/bin/git-shell'


- name: "create /srv/data"
  file:
    path: /srv/data
    state: directory
    owner: root
    mode: 0750
    group: root


- name: "create /tmp/empty folder for empty user skeleton"
  file:
    path: /tmp/empty
    state: directory
    owner: root
    mode: 0750
    group: root


- name: create git user
  user:
    name: git
    comment: "Git server user"
    shell: /usr/bin/git-shell
    home: "{{ git_user_home }}"
    skeleton: /tmp/empty
    system: yes
  become: yes


- name: "create git home in {{ git_user_home }}"
  file:
    path: "{{ git_user_home }}"
    state: directory
    owner: git
    group: git
    mode: 0750
    recurse: yes


- name: "set up {{ normal_user }} as git's authorized key"
  blockinfile:
    path: "/etc/ssh/authorized_keys/{{ normal_user }}"
    block: |
            no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty {{ normal_user_sshkey }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    create: yes
    validate: ssh-keygen -l -f %s
  with_items: "{{ backup_auth_users }}"
  become: yes
  notify: restart ssh


# TODO not enough perms to run git-shell

- name: copy files for git user
  synchronize:
    src: .
    dest: "{{ git_user_home }}/"
    perms: yes
    recursive: yes
    links: yes
    rsync_opts:
      - "--exclude=.git*"
      - "--chown=git:git"


# if git-shell not working:
# $ cd /srv/data/git
# $ mkdir project.git
# $ cd project.git
# $ git init --bare
