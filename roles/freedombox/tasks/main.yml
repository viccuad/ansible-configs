---

- name: install freedombox packages
  apt:
    name: "{{ item }}"
    state: present
    install_recommends: yes
  with_items:
    - freedombox-setup


- name: exec freedombox-setup (if freedombox not installed yet)
  shell: '/usr/lib/freedombox/setup &> /var/log/freedombox-setup.log'
  args:
    creates: /var/log/freedombox-setup.log
  when: |
         ansible_distribution == 'Debian' and
         ansible_distribution_major_version == '9'


- name: register variable for freedombox-first-run.log file
  stat:
    path: /var/log/freedombox-first-run.log
  register: first_run
  changed_when: false


- name: reboot host (if freedombox not installed yet)
  shell: sleep 2 && shutdown -r now "rebooting after running freedombox-setup"
  async: 1
  poll: 0
  when: first_run.stat.exists == false


- name: pause (if freedombox not installed yet)
  # This pause is mandatory, otherwise the existing control connection gets reused!
  pause:
    seconds: 30
  when: |
         first_run.stat.exists == false and
         ansible_distribution == 'Debian' and
         ansible_distribution_major_version == '9'


- name: wait for host to be up (if freedombox not installed yet)
  become: no
  connection: local
  local_action: wait_for
  args:
    host: "{{ ansible_host }}"
    port: "{{ ansible_port | default(22) }}"
    state: started
    delay: 60
    timeout: 180
  when: |
         first_run.stat.exists == false and
         ansible_distribution == 'Debian' and
         ansible_distribution_major_version == '9'


- name: enable plinth only on firewalld internal zone
  shell: |
          firewall-cmd --permanent --remove-service=http --zone=external
          firewall-cmd --permanent --remove-service=https --zone=external
          firewall-cmd --permanent --add-service=http --zone=internal
          firewall-cmd --permanent --add-service=https --zone=internal
  notify: reload firewalld


# apply the handlers now instead of waiting for the end of the playbook
- meta: flush_handlers
